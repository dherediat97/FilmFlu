name: FilmFlu Multiplatform App
on:
  push:
   branches: [ "main" ]
  workflow_dispatch:


jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v4
     - uses: subosito/flutter-action@v2
       with:
          channel: stable
          cache: true
          # optional parameters follow
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
     - run: flutter clean
     - run: flutter pub get
     - run: echo "TMDB_KEY=${{ secrets.TMDB_KEY }}" > .env
     - run: echo "FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}" > .env
     - run: echo "FIREBASE_API_KEY_ANDROID=${{ secrets.FIREBASE_API_KEY_ANDROID }}" > .env
     - run: echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" > .env
     - run: echo "FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}" > .env
     - run: echo "FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}" > .env
     - run: echo "FIREBASE_PROJECT_NAME=${{ secrets.FIREBASE_PROJECT_NAME }}" > .env
     - run: echo "FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}" > .env
     - name: Make envfile
       uses: SpicyPizza/create-envfile@v2.0
       with:
          envkey_DEBUG: false
          envkey_TMDB_KEY: ${{ secrets.TMDB_KEY }}
          envkey_FIREBASE_API_KEY_WEB: ${{ secrets.FIREBASE_API_KEY_WEB }}
          envkey_FIREBASE_API_KEY_ANDROID: ${{ secrets.FIREBASE_API_KEY_ANDROID }}
          envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          envkey_FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB}}
          envkey_FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID}}
          envkey_FIREBASE_MEASUREMENT_ID_WEB: ${{ secrets.FIREBASE_MEASUREMENT_ID_WEB}}
          envkey_FIREBASE_PROJECT_NAME: ${{ secrets.FIREBASE_PROJECT_NAME}}
          file_name: .env
     - run: flutter pub run build_runner build --delete-conflicting-outputs
     - name: Install dependencies
       run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
     - name: Install project dependencies
       run: flutter pub get
     - name: Enable linux build
       run: flutter config --enable-linux-desktop
     - name: Build artifacts
       run: flutter build linux --release
     - name: Archive Release
       uses: thedoctor0/zip-release@master
       with:
          type: 'zip'
          filename: FilmFlu-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
     - name: Linux Release
       uses: softprops/action-gh-release@v1
       if: startsWith(github.ref, 'refs/tags/')
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          files: build/linux/x64/release/bundle/FilmFlu-${{github.ref_name}}-linux.zip

  windows:
    runs-on: windows-latest

    steps:
     - uses: actions/checkout@v4
     - uses: subosito/flutter-action@v2
       with:
          channel: stable
          cache: true
          # optional parameters follow
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
     - run: flutter clean
     - run: flutter pub get
     - run: echo "TMDB_KEY=${{ secrets.TMDB_KEY }}" > .env
     - run: echo "FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}" > .env
     - run: echo "FIREBASE_API_KEY_ANDROID=${{ secrets.FIREBASE_API_KEY_ANDROID }}" > .env
     - run: echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" > .env
     - run: echo "FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}" > .env
     - run: echo "FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}" > .env
     - run: echo "FIREBASE_PROJECT_NAME=${{ secrets.FIREBASE_PROJECT_NAME }}" > .env
     - run: echo "FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}" > .env
     - name: Make envfile
       uses: SpicyPizza/create-envfile@v2.0
       with:
          envkey_DEBUG: false
          envkey_TMDB_KEY: ${{ secrets.TMDB_KEY }}
          envkey_FIREBASE_API_KEY_WEB: ${{ secrets.FIREBASE_API_KEY_WEB }}
          envkey_FIREBASE_API_KEY_ANDROID: ${{ secrets.FIREBASE_API_KEY_ANDROID }}
          envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          envkey_FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB}}
          envkey_FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID}}
          envkey_FIREBASE_MEASUREMENT_ID_WEB: ${{ secrets.FIREBASE_MEASUREMENT_ID_WEB}}
          envkey_FIREBASE_PROJECT_NAME: ${{ secrets.FIREBASE_PROJECT_NAME}}
          file_name: .env
     - run: flutter pub run build_runner build --delete-conflicting-outputs
     - name: Install dependencies
       run: flutter pub run build_runner build --delete-conflicting-outputs
     - name: Enable windows build
       run: flutter config --enable-windows-desktop
     - name: Build artifacts
       run: flutter build windows
     - name: Archive Release
       uses: thedoctor0/zip-release@master
       with:
          type: 'zip'
          filename: FilmFlu-${{github.ref_name}}-windows.zip
          directory: build/windows/runner/Release
     - name: Windows Release
       uses: softprops/action-gh-release@v1
       if: startsWith(github.ref, 'refs/tags/')
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          files: build/windows/runner/Release/FilmFlu-${{github.ref_name}}-windows.zip

  android:
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-java@v4
          with:
            distribution: 'oracle'
            java-version: '17'
        - uses: subosito/flutter-action@v2
          with:
            channel: stable
            cache: true
            # optional parameters follow
            cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache
            cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
            pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache of dart pub get dependencies
            pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
        - run: flutter clean
        - run: flutter pub get
        - run: echo "TMDB_KEY=${{ secrets.TMDB_KEY }}" > .env
        - run: echo "FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}" > .env
        - run: echo "FIREBASE_API_KEY_ANDROID=${{ secrets.FIREBASE_API_KEY_ANDROID }}" > .env
        - run: echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" > .env
        - run: echo "FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}" > .env
        - run: echo "FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}" > .env
        - run: echo "FIREBASE_PROJECT_NAME=${{ secrets.FIREBASE_PROJECT_NAME }}" > .env
        - run: echo "FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}" > .env
        - name: Make envfile
          uses: SpicyPizza/create-envfile@v2.0
          with:
            envkey_DEBUG: false
            envkey_TMDB_KEY: ${{ secrets.TMDB_KEY }}
            envkey_FIREBASE_API_KEY_WEB: ${{ secrets.FIREBASE_API_KEY_WEB }}
            envkey_FIREBASE_API_KEY_ANDROID: ${{ secrets.FIREBASE_API_KEY_ANDROID }}
            envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
            envkey_FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB}}
            envkey_FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID}}
            envkey_FIREBASE_MEASUREMENT_ID_WEB: ${{ secrets.FIREBASE_MEASUREMENT_ID_WEB}}
            envkey_FIREBASE_PROJECT_NAME: ${{ secrets.FIREBASE_PROJECT_NAME}}
            file_name: .env
        - run: flutter pub run build_runner build --delete-conflicting-outputs
        - run: flutter gen-l10n
        - run: flutter build apk
        - uses: actions/upload-artifact@v4
          with:
            name: release-apk
            path:  build/app/outputs/apk/release/app-release.apk
            overwrite: true
            
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          with:
            tag_name: 2.0.0
            release_name: Release v2.0.0
            draft: false
            prerelease: false

        - name: Upload APK to Release
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: build/app/outputs/apk/release/app-release.apk
            asset_name: app-release.apk
            asset_content_type: application/zip
