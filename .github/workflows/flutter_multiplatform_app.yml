name: FilmFlu Multiplatform App
on:
  push:
   branches: [ "main" ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
           channel: stable
           cache: true
           # optional parameters follow
           cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache
           cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
           pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache of dart pub get dependencies
           pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
      - run: flutter clean
      - run: flutter pub get
      - run: echo "TMDB_KEY=${{ secrets.TMDB_KEY }}" > .env
      - run: echo "FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}" > .env
      - run: echo "FIREBASE_API_KEY_ANDROID=${{ secrets.FIREBASE_API_KEY_ANDROID }}" > .env
      - run: echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" > .env
      - run: echo "FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}" > .env
      - run: echo "FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}" > .env
      - run: echo "FIREBASE_PROJECT_NAME=${{ secrets.FIREBASE_PROJECT_NAME }}" > .env
      - run: echo "FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}" > .env
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
           envkey_DEBUG: false
           envkey_TMDB_KEY: ${{ secrets.TMDB_KEY }}
           envkey_FIREBASE_API_KEY_WEB: ${{ secrets.FIREBASE_API_KEY_WEB }}
           envkey_FIREBASE_API_KEY_ANDROID: ${{ secrets.FIREBASE_API_KEY_ANDROID }}
           envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
           envkey_FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB}}
           envkey_FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID}}
           envkey_FIREBASE_MEASUREMENT_ID_WEB: ${{ secrets.FIREBASE_MEASUREMENT_ID_WEB}}
           envkey_FIREBASE_PROJECT_NAME: ${{ secrets.FIREBASE_PROJECT_NAME}}
           file_name: .env
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter gen-l10n
  linux:
    runs-on: ubuntu-latest
    needs: build
    steps:
     - name: Install dependencies
       run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
     - name: Install project dependencies
       run: flutter pub get
     - name: Enable linux build
       run: flutter config --enable-linux-desktop
     - name: Build artifacts
       run: flutter build linux --release
     - name: Archive Release
       uses: thedoctor0/zip-release@master
       with:
          type: 'zip'
          filename: FilmFlu-linux.zip
          directory: build/linux/x64/release/bundle
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          tag_name: v2.0.0
          release_name: Versi√≥n v2.0.0 - Linux
          draft: false
          prerelease: false
            
     - uses: actions/upload-artifact@v4
       with:
          name: Releases
          path: build/linux/x64/release/bundle/FilmFlu-linux.zip
          overwrite: true

  windows:
    runs-on: windows-latest
    needs: build

    steps:
     - name: Build artifacts
       run: flutter build windows --release
     - name: Archive Release
       uses: thedoctor0/zip-release@master
       with:
          type: 'zip'
          filename: FilmFlu-windows.zip
          directory: build/windows/x64/runner/Release
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          tag_name: v2.0.0
          release_name: Version 2.0.0 - Windows
          draft: false
          prerelease: false
     - uses: actions/upload-artifact@v4
       with:
          name: Releases
          path: build/windows/x64/runner/Release/FilmFlu-windows.zip
          overwrite: true
     

  android:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - run: flutter build apk --release
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: v2.0.0
            release_name: Version 2.0.0 - Android
            draft: false
            prerelease: false
        - name: Upload APK to Release
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: build/app/outputs/apk/release/app-release.apk
            asset_name: app-release.apk
            asset_content_type: application/zip
