# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Film Flu Android App

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-java@v2
          with:
            distribution: 'zulu'
            java-version: '11'
        - uses: subosito/flutter-action@v2
          with:
            channel: 'stable'
        - run: flutter pub get
        - name: Write TMDB_KEY to .env
          run: echo 'TMDB_KEY={{ secrets.TMDB_KEY }}' > .env
        - run: flutter pub run build_runner build
        - run: flutter build apk
        - uses: actions/upload-artifact@master
          with:
            name: release-apk
            path:  build/app/outputs/apk/release/app-release.apk
            
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
          with:
            tag_name: 0.0.1
            release_name: Version 0.0.1
            draft: false
            prerelease: false

        - name: Upload APK to Release
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./app/build/outputs/apk/release/app-release.apk
            asset_name: app-release.apk
            asset_content_type: application/zip