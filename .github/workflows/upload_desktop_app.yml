name: Upload Desktop Apps
on: push

jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v4
     - uses: subosito/flutter-action@v2
       with:
          channel: stable
          cache: true
          # optional parameters follow
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # change this to specify the cache path
     - run: flutter clean
     - run: flutter pub get
     - run: echo "TMDB_KEY=${{ secrets.TMDB_KEY }}" > .env
     - run: echo "FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}" > .env
     - run: echo "FIREBASE_API_KEY_ANDROID=${{ secrets.FIREBASE_API_KEY_ANDROID }}" > .env
     - run: echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" > .env
     - run: echo "FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}" > .env
     - run: echo "FIREBASE_APP_ID_ANDROID=${{ secrets.FIREBASE_APP_ID_ANDROID }}" > .env
     - run: echo "FIREBASE_PROJECT_NAME=${{ secrets.FIREBASE_PROJECT_NAME }}" > .env
     - run: echo "FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}" > .env
     - name: Make envfile
       uses: SpicyPizza/create-envfile@v2.0
       with:
          envkey_DEBUG: false
          envkey_TMDB_KEY: ${{ secrets.TMDB_KEY }}
          envkey_FIREBASE_API_KEY_WEB: ${{ secrets.FIREBASE_API_KEY_WEB }}
          envkey_FIREBASE_API_KEY_ANDROID: ${{ secrets.FIREBASE_API_KEY_ANDROID }}
          envkey_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          envkey_FIREBASE_APP_ID_WEB: ${{ secrets.FIREBASE_APP_ID_WEB}}
          envkey_FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID}}
          envkey_FIREBASE_MEASUREMENT_ID_WEB: ${{ secrets.FIREBASE_MEASUREMENT_ID_WEB}}
          envkey_FIREBASE_PROJECT_NAME: ${{ secrets.FIREBASE_PROJECT_NAME}}
          file_name: .env
     - run: flutter pub run build_runner build --delete-conflicting-outputs
     - name: Install dependencies
       run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
     - name: Install project dependencies
       run: flutter pub get
     - name: Enable linux build
       run: flutter config --enable-linux-desktop
     - name: Build artifacts
       run: flutter build linux --release
     - name: Archive Release
       uses: thedoctor0/zip-release@master
       with:
          type: 'zip'
          filename: FilmFlu-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
     - name: Linux Release
       uses: softprops/action-gh-release@v1
       if: startsWith(github.ref, 'refs/tags/')
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          files: build/linux/x64/release/bundle/FilmFlu-${{github.ref_name}}-linux.zip

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '2.10.0'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: FilmFlu-${{github.ref_name}}-windows.zip
          directory: build/windows/runner/Release
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/runner/Release/FilmFlu-${{github.ref_name}}-windows.zip

  # build-and-release-macos:
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'stable'
  #         flutter-version: '2.10.0'
  #     - name: Install project dependencies
  #       run: flutter pub get
  #     - name: Generate intermediates
  #       run: flutter pub run build_runner build --delete-conflicting-outputs
  #     - name: Enable macOS build
  #       run: flutter config --enable-macos-desktop
  #     - name: Build artifacts
  #       run: flutter build macos --release
  #     - name: Archive Release
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         type: 'zip'
  #         filename: FilmFlu-${{github.ref_name}}-macos.zip
  #         directory: build/macos/Build/Products/Release
  #     - name: macOS Release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: build/macos/Build/Products/Release/MacRecoveryX-${{github.ref_name}}-macos.zip